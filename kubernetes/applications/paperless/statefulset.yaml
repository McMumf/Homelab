apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: paperless-secrets
  namespace: homelab
spec:
  refreshInterval: 24h
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: paperless-secrets
  data:
    - secretKey: secret_key
      remoteRef:
        key: kv/paperless
        property: secret_key
    - secretKey: admin_user
      remoteRef:
        key: kv/paperless
        property: admin_user
    - secretKey: admin_email
      remoteRef:
        key: kv/paperless
        property: admin_email
    - secretKey: admin_password
      remoteRef:
        key: kv/paperless
        property: admin_password
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: paperless-ngx
  namespace: homelab
spec:
  serviceName: "paperless-ngx"
  replicas: 1
  selector:
    matchLabels:
      app: paperless-ngx
  template:
    metadata:
      labels:
        app: paperless-ngx
    spec:
      automountServiceAccountToken: false
      containers:
        - name: paperless-ngx
          image: ghcr.io/paperless-ngx/paperless-ngx:2.11
          resources:
            limits:
              memory: 4Gi
              ephemeral-storage: 32Gi
            requests:
              memory: 1Gi
          ports:
            - name: paperless-web
              containerPort: 8000
              protocol: TCP
          env:
            - name: PAPERLESS_URL
              value: "https://paperless.mcmumf.dev"
            # - name: PAPERLESS_ENABLE_HTTP_REMOTE_USER
            #   value: "TRUE"
            - name: PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME
              value: "HTTP_X_AUTHENTIK_USERNAME"
            - name: PAPERLESS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: paperless-secrets
                  key: secret_key
            - name: PAPERLESS_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: paperless-secrets
                  key: admin_user
            - name: PAPERLESS_ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: paperless-secrets
                  key: admin_email
            - name: PAPERLESS_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: paperless-secrets
                  key: admin_password
          volumeMounts:
            - name: paperless-data
              mountPath: /usr/src/paperless/data
            - name: paperless-media
              mountPath: /usr/src/paperless/media
            - name: paperless-export
              mountPath: /usr/src/paperless/export
        - name: broker
          image: docker.io/library/redis:7.4
          resources:
            limits:
              memory: 2Gi
            requests:
              memory: 512Mi
          ports:
            - name: redis
              containerPort: 6379
  volumeClaimTemplates:
    - metadata:
        name: paperless-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: longhorn
        resources:
          requests:
            storage: 32Gi
    - metadata:
        name: paperless-media
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: longhorn
        resources:
          requests:
            storage: 32Gi
    - metadata:
        name: paperless-export
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: longhorn
        resources:
          requests:
            storage: 32Gi
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx
  namespace: homelab
  labels:
    app: paperless-ngx
spec:
  selector:
    app: paperless-ngx
  ports:
    - port: 8000
      name: paperless-ngx-web
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: paperless-ngx
  namespace: homelab
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    nginx.ingress.kubernetes.io/proxy-body-size: "10g"
    nginx.org/client-max-body-size: "10g"
    # nginx.ingress.kubernetes.io/auth-url: |-
    #   http://ak-outpost-internalproxy.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
    # nginx.ingress.kubernetes.io/auth-signin: |-
    #   https://paperless.mcmumf.dev/outpost.goauthentik.io/start?rd=$escaped_request_uri
    # nginx.ingress.kubernetes.io/auth-response-headers: |-
    #   Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-snippet: |

    nginx.ingress.kubernetes.io/server-snippet: |
      proxy_http_version 1.1;
      proxy_set_header Upgrade "websocket";
      proxy_set_header Connection "Upgrade";

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $server_name;
      add_header Referrer-Policy "strict-origin-when-cross-origin";
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - &hostName paperless.mcmumf.dev
      secretName: paperless-cert
  rules:
    - host: *hostName
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: paperless-ngx
                port:
                  number: 8000
