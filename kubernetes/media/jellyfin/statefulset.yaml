apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jellyfin
  namespace: homelab
spec:
  serviceName: "jellyfin"
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      automountServiceAccountToken: false
      containers:
        # Container
        - name: jellyfin
          image: jellyfin/jellyfin:10.9.7
          # Resources
          resources:
            requests:
              gpu.intel.com/i915: "1"
              cpu: 1000m
              memory: 500Mi
              ephemeral-storage: 32Gi
            limits:
              gpu.intel.com/i915: "1"
              cpu: 2000m
              memory: 4Gi
              ephemeral-storage: 32Gi
          # Ports
          ports:
            - name: jellyfin-http
              containerPort: 8096
              protocol: TCP
          # Probes
          livenessProbe:
            httpGet:
              path: /health
              port: jellyfin-http
          readinessProbe:
            httpGet:
              path: /
              port: jellyfin-http
            initialDelaySeconds: 5
            periodSeconds: 5
          # Volume Mounts
          volumeMounts:
            - name: jellyfin-data
              mountPath: /config
            - name: homelab-nfs
              mountPath: /mnt/media
      volumes:
        - name: homelab-nfs
          nfs:
            server: 192.168.1.70
            path: /volume1/library
  volumeClaimTemplates:
    - metadata:
        name: jellyfin-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: longhorn
        resources:
          requests:
            storage: 32Gi
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: homelab
  labels:
    app: jellyfin
spec:
  selector:
    app: jellyfin
  ports:
    - port: 8096
      name: jellyfin
    - port: 1900
      name: dlna
      protocol: UDP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin
  namespace: homelab
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/client-max-body-size: "20m"
    nginx.ingress.kubernetes.io/server-snippet: |
      proxy_set_header Upgrade "websocket";
      proxy_set_header Connection "Upgrade";
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - jellyfin.mcmumf.dev
      secretName: jellyfin-cert
  rules:
    - host: jellyfin.mcmumf.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jellyfin
                port:
                  number: 8096
