a +++++++++++++piVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: "{{ .Release.Name }}"
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: s.Name }}++++    spec:
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 10
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.repository}}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          resources:
            requests: {{ toYaml .Values.statefulset.resources.requests | nindent 14 }}
            limits: {{ toYaml .Values.statefulset.resources.limits | nindent 14 }}
          env: {{ toYaml .Values.statefulset.env  | nindent 12 }}
          ports:
            - containerPort: 80++++++++++++++++++++++++++++++++++++++++++++++
              hostPort: {{ .Values.statefulset.port.number }}
              protocol: TCP
          volumeMounts:
            - mountPath: /var/www/html
              name: {{ .Release.Name }}-data
            # - mountPath: /var/www/html/public/img
            #   name: {{ .Release.Name }}-images
            # - mountPath: /var/www/html/app/logs
            #   name: {{ .Release.Name }}-logs
            # - mountPath: /var/www/html/public/backup
            #   name: {{ .Release.Name }}-backup
            # - mountPath: /var/www/html/public/themes
            #   name: {{ .Release.Name }}-themes
            # - mountPath: /var/www/html/app/migrations
            #   name: {{ .Release.Name }}-migrate
  volumeClaimTemplates:
    - metadata:
        name: {{ .Release.Name }}-data
      spec:
        accessModes: ["ReadWriteOnce"]++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-``
        storageClassName: "longhorn"
        resources:
          requests:
            storage: {{ .Values.statefulset.volumeClaimTemplate.size }}
    # - metadata:
    #   name: {{ .Release.Name }}-images
    #   spec:
    #     accessModes: ["ReadWriteOnce"]
    #     storgeClassName: "longhorn"
    #     resources:
    #       requests:
    #         storage: {{ .Values.statefulset.volumeClaimTemplate.imagesSize }}
    # - metadata:
    #     name: {{ .Release.Name }}-logs
    #   spec:
    #     accessModes: ["ReadWriteOnce"]
    #     storageClassName: "longhorn"
    #     resources:
    #       requests:
    #         storage: {{ .-+++++++++++++++++++++++++++++++++++++++++-Values.statefulset.volumeClaimTemplate.logsSize }}
    # - metadata:
    #     name: {{ .Release.Name }}-backup
    #   spec:
    #     accessModes: ["ReadWriteOnce"]
    #     storageClassName: "longhorn"
    #     resources:
    #       requests:
    #         storage: {{ .Values.statefulset.volumeClaimTemplate.backupsSize }}
    # - metadata:
    #     name: {{ .Release.Name }}-themes
    #   spec:
    #     accessModes: ["ReadWriteOnce"]
    #     storageClassName: "longhorn"
    #     resources:
    #       requests:
    #         storage: {{ .Values.statefulset.volumeClaimTemplate.themesSize }}
    # - metadata:
    #     name: {{ .Release.Name }}-migrate
    #   spec:
    #     accessModes: ["ReadWriteOnce"]
    #     storageClassName: "longhorn"
    #     resources:
    #       requests:
    #         storage: {{ .Values.statefulset.volumeClaimTemplate.migrateSize }}
